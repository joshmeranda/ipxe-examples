---
- name: create "Booting Node {{ node_number}}" message
  shell: >
    figlet "Booting Node {{ node_number }}" 2>/dev/null || echo "Booting Node {{ node_number }}"
  register: figlet_result

- name: print "Booting Node {{ node_number }}"
  debug:
    msg: "{{ figlet_result.stdout }}"

- name: set Harvester Node IP fact
  set_fact:
    harvester_node_ip: "{{ harvester_network_config['cluster'][node_number | int]['ip'] }}"

- name: boot Harvester Node {{ node_number }}
  shell: >
    vagrant up harvester-node-{{ node_number }}
  register: harvester_node_boot_result

# disable this check for automated testing
#- name: wait for Harvester Node {{ harvester_node_ip }} to get ready
#  uri:
#    url: "https://{{ harvester_node_ip }}"
#    validate_certs: no
#    status_code: 200
#    timeout: 120
#  register: auth_modes_lookup_result
#  until: auth_modes_lookup_result.status == 200
#  retries: 20
#  delay: 120

- name: "clear Harvester Node {{ harvester_node_ip }} from hosts file"
  shell: >
    ssh-keygen -R {{ harvester_node_ip }} -f /$HOME/.ssh/known_hosts

- name: "wait for ssh connection to Harvester Node {{ harvester_node_ip }}"
  shell: >
    sshpass -p password1234 ssh -o ConnectTimeout=10 rancher@{{ harvester_node_ip }} -- exit
  register: boot_harvester_ssh
  retries: 20
  delay: 30
  until: boot_harvester_ssh.rc == 0